upstream kong {
   # 负载均衡算法，根据最少连接数
   least_conn;
   server 172.16.3.1;
   server 172.16.3.2;
}

server {
   # 这些端口要修改为实际情况
   listen 80;
   #include snippets/ssl-api.example.com.conf;
   #include snippets/ssl-params.conf;
   # https 因为安全原因，需要禁用 gzip
   # 但是在一些场景下，不需要禁用
   # gzip off;
   gzip on;
   # 设置允许压缩的页面最小字节数
   gzip_min_length 1000;
   gzip_buffers 4 16k;
   gzip_http_version 1.1;
   # 1~9，默认为1，数值越大，压缩率越高，CPU占用越多，时间越久
   gzip_comp_level 3;
   gzip_vary on;
   # 禁用对 IE 6 使用 gzip 压缩
   gzip_disable "MSIE [1-6]\.";
   gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/javascript "application/javascript; charset=utf-8" application/xml application/xml+rss application/json "application/json; charset=utf-8" font/ttf font/otf image/svg+xml;

   # 设置最大允许的POST数据量，如果提交的文件超过这个值，会出现413错误
   client_max_body_size 20m;
   keepalive_timeout 15;

   # 不显示 nginx 的版本号
   server_tokens off;

   ## Individual nginx logs
   access_log  /var/log/nginx/access.log;
   error_log   /var/log/nginx/error.log;

   # 这里不能用 ^~ 因为后面跟的是字符串不是正则表达式
   # 只匹配符合规则的，其他都返回 404
   location / {
       # 这条命令会将 headers 中的 server 设置为 nginx 代理的后端网站所使用的
       proxy_set_header Host $http_host;
       proxy_redirect off;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Scheme $scheme;
       proxy_pass http://kong;
       expires -1;
   }

   # 主页返回 404
   location = / {
       return 404;
   }
}
